/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 28 17:32:46 GMT 2018
 */

package esfinge.cnext.metric;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import esfinge.cnext.metric.MetricRecorder;
import esfinge.cnext.metric.MetricRecorderLogger;
import esfinge.cnext.metric.TimeMetricsGenerator;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TimeMetricsGenerator_ESTest extends TimeMetricsGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TimeMetricsGenerator timeMetricsGenerator0 = new TimeMetricsGenerator();
      timeMetricsGenerator0.startRecording((Method) null);
      System.setCurrentTimeMillis(0L);
      try { 
        timeMetricsGenerator0.finishRecording((Method) null, (String) null, "KbSIS-q^sc<>B;f");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("esfinge.cnext.metric.Metrics", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TimeMetricsGenerator timeMetricsGenerator0 = new TimeMetricsGenerator();
      MetricRecorderLogger metricRecorderLogger0 = new MetricRecorderLogger();
      timeMetricsGenerator0.setMetricRecorder(metricRecorderLogger0);
      MetricRecorder metricRecorder0 = timeMetricsGenerator0.getMetricRecorder();
      assertSame(metricRecorder0, metricRecorderLogger0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TimeMetricsGenerator timeMetricsGenerator0 = new TimeMetricsGenerator();
      MetricRecorder metricRecorder0 = timeMetricsGenerator0.getMetricRecorder();
      assertNull(metricRecorder0);
  }
}
