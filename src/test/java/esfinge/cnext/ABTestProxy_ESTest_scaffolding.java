/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Nov 28 17:42:23 GMT 2018
 */

package esfinge.cnext;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class ABTestProxy_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "esfinge.cnext.ABTestProxy"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "Cp1252"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\FERNAN~1.PER\\AppData\\Local\\Temp\\"); 
    java.lang.System.setProperty("user.country", "BR"); 
    java.lang.System.setProperty("user.dir", "D:\\fernando.projetos\\experiments"); 
    java.lang.System.setProperty("user.home", "C:\\Users\\fernando.pereira"); 
    java.lang.System.setProperty("user.language", "pt"); 
    java.lang.System.setProperty("user.name", "fernando.pereira"); 
    java.lang.System.setProperty("user.timezone", "America/Sao_Paulo"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ABTestProxy_ESTest_scaffolding.class.getClassLoader() ,
      "org.json.simple.parser.JSONParser",
      "org.json.simple.parser.ContainerFactory",
      "esfinge.cnext.metric.MetricResult",
      "org.json.simple.JSONStreamAware",
      "org.json.simple.JSONAware",
      "esfinge.cnext.metric.MetricRecorderLogger",
      "esfinge.cnext.ABTestProxy",
      "esfinge.cnext.metric.Metrics",
      "org.json.simple.JSONArray",
      "org.json.simple.parser.Yylex",
      "org.json.simple.parser.ContentHandler",
      "esfinge.cnext.metric.MetricRecorder",
      "esfinge.cnext.selector.SelectorWithPersistence",
      "org.json.simple.parser.ParseException",
      "esfinge.cnext.metric.TimeMetricsGenerator",
      "org.json.simple.JSONObject",
      "esfinge.cnext.selector.Selector",
      "org.json.simple.parser.Yytoken",
      "esfinge.cnext.metric.MemoryMetricsGenerator",
      "esfinge.cnext.metric.MetricRecorderFile",
      "esfinge.cnext.selector.SelectorRandom"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ABTestProxy_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "esfinge.cnext.ABTestProxy",
      "esfinge.cnext.selector.SelectorRandom",
      "esfinge.cnext.selector.SelectorWithPersistence",
      "org.json.simple.parser.JSONParser",
      "org.json.simple.parser.Yylex",
      "esfinge.cnext.metric.TimeMetricsGenerator",
      "esfinge.cnext.metric.MemoryMetricsGenerator",
      "org.json.simple.parser.Yytoken",
      "org.json.simple.JSONObject",
      "org.json.simple.JSONArray",
      "esfinge.cnext.metric.MetricResult",
      "esfinge.cnext.metric.MetricRecorderFile",
      "esfinge.cnext.metric.MetricRecorderLogger",
      "org.json.simple.parser.ParseException"
    );
  }
}
